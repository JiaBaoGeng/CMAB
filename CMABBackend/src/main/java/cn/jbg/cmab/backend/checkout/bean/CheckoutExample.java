package cn.jbg.cmab.backend.checkout.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CheckoutExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public CheckoutExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCheckoutIdIsNull() {
            addCriterion("checkout_id is null");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdIsNotNull() {
            addCriterion("checkout_id is not null");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdEqualTo(Long value) {
            addCriterion("checkout_id =", value, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdNotEqualTo(Long value) {
            addCriterion("checkout_id <>", value, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdGreaterThan(Long value) {
            addCriterion("checkout_id >", value, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdGreaterThanOrEqualTo(Long value) {
            addCriterion("checkout_id >=", value, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdLessThan(Long value) {
            addCriterion("checkout_id <", value, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdLessThanOrEqualTo(Long value) {
            addCriterion("checkout_id <=", value, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdIn(List<Long> values) {
            addCriterion("checkout_id in", values, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdNotIn(List<Long> values) {
            addCriterion("checkout_id not in", values, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdBetween(Long value1, Long value2) {
            addCriterion("checkout_id between", value1, value2, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutIdNotBetween(Long value1, Long value2) {
            addCriterion("checkout_id not between", value1, value2, "checkoutId");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeIsNull() {
            addCriterion("checkout_type is null");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeIsNotNull() {
            addCriterion("checkout_type is not null");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeEqualTo(Integer value) {
            addCriterion("checkout_type =", value, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeNotEqualTo(Integer value) {
            addCriterion("checkout_type <>", value, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeGreaterThan(Integer value) {
            addCriterion("checkout_type >", value, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("checkout_type >=", value, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeLessThan(Integer value) {
            addCriterion("checkout_type <", value, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeLessThanOrEqualTo(Integer value) {
            addCriterion("checkout_type <=", value, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeIn(List<Integer> values) {
            addCriterion("checkout_type in", values, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeNotIn(List<Integer> values) {
            addCriterion("checkout_type not in", values, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeBetween(Integer value1, Integer value2) {
            addCriterion("checkout_type between", value1, value2, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andCheckoutTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("checkout_type not between", value1, value2, "checkoutType");
            return (Criteria) this;
        }

        public Criteria andAuditIdIsNull() {
            addCriterion("audit_id is null");
            return (Criteria) this;
        }

        public Criteria andAuditIdIsNotNull() {
            addCriterion("audit_id is not null");
            return (Criteria) this;
        }

        public Criteria andAuditIdEqualTo(Long value) {
            addCriterion("audit_id =", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdNotEqualTo(Long value) {
            addCriterion("audit_id <>", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdGreaterThan(Long value) {
            addCriterion("audit_id >", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdGreaterThanOrEqualTo(Long value) {
            addCriterion("audit_id >=", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdLessThan(Long value) {
            addCriterion("audit_id <", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdLessThanOrEqualTo(Long value) {
            addCriterion("audit_id <=", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdIn(List<Long> values) {
            addCriterion("audit_id in", values, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdNotIn(List<Long> values) {
            addCriterion("audit_id not in", values, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdBetween(Long value1, Long value2) {
            addCriterion("audit_id between", value1, value2, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdNotBetween(Long value1, Long value2) {
            addCriterion("audit_id not between", value1, value2, "auditId");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeIsNull() {
            addCriterion("checkout_time is null");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeIsNotNull() {
            addCriterion("checkout_time is not null");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeEqualTo(Date value) {
            addCriterionForJDBCDate("checkout_time =", value, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("checkout_time <>", value, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("checkout_time >", value, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("checkout_time >=", value, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeLessThan(Date value) {
            addCriterionForJDBCDate("checkout_time <", value, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("checkout_time <=", value, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeIn(List<Date> values) {
            addCriterionForJDBCDate("checkout_time in", values, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("checkout_time not in", values, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("checkout_time between", value1, value2, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("checkout_time not between", value1, value2, "checkoutTime");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescIsNull() {
            addCriterion("checkout_desc is null");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescIsNotNull() {
            addCriterion("checkout_desc is not null");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescEqualTo(String value) {
            addCriterion("checkout_desc =", value, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescNotEqualTo(String value) {
            addCriterion("checkout_desc <>", value, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescGreaterThan(String value) {
            addCriterion("checkout_desc >", value, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescGreaterThanOrEqualTo(String value) {
            addCriterion("checkout_desc >=", value, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescLessThan(String value) {
            addCriterion("checkout_desc <", value, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescLessThanOrEqualTo(String value) {
            addCriterion("checkout_desc <=", value, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescLike(String value) {
            addCriterion("checkout_desc like", value, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescNotLike(String value) {
            addCriterion("checkout_desc not like", value, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescIn(List<String> values) {
            addCriterion("checkout_desc in", values, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescNotIn(List<String> values) {
            addCriterion("checkout_desc not in", values, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescBetween(String value1, String value2) {
            addCriterion("checkout_desc between", value1, value2, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andCheckoutDescNotBetween(String value1, String value2) {
            addCriterion("checkout_desc not between", value1, value2, "checkoutDesc");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeIsNull() {
            addCriterion("people_type is null");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeIsNotNull() {
            addCriterion("people_type is not null");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeEqualTo(Integer value) {
            addCriterion("people_type =", value, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeNotEqualTo(Integer value) {
            addCriterion("people_type <>", value, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeGreaterThan(Integer value) {
            addCriterion("people_type >", value, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("people_type >=", value, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeLessThan(Integer value) {
            addCriterion("people_type <", value, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeLessThanOrEqualTo(Integer value) {
            addCriterion("people_type <=", value, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeIn(List<Integer> values) {
            addCriterion("people_type in", values, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeNotIn(List<Integer> values) {
            addCriterion("people_type not in", values, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeBetween(Integer value1, Integer value2) {
            addCriterion("people_type between", value1, value2, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("people_type not between", value1, value2, "peopleType");
            return (Criteria) this;
        }

        public Criteria andPeopleIdIsNull() {
            addCriterion("people_id is null");
            return (Criteria) this;
        }

        public Criteria andPeopleIdIsNotNull() {
            addCriterion("people_id is not null");
            return (Criteria) this;
        }

        public Criteria andPeopleIdEqualTo(Long value) {
            addCriterion("people_id =", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdNotEqualTo(Long value) {
            addCriterion("people_id <>", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdGreaterThan(Long value) {
            addCriterion("people_id >", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdGreaterThanOrEqualTo(Long value) {
            addCriterion("people_id >=", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdLessThan(Long value) {
            addCriterion("people_id <", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdLessThanOrEqualTo(Long value) {
            addCriterion("people_id <=", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdIn(List<Long> values) {
            addCriterion("people_id in", values, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdNotIn(List<Long> values) {
            addCriterion("people_id not in", values, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdBetween(Long value1, Long value2) {
            addCriterion("people_id between", value1, value2, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdNotBetween(Long value1, Long value2) {
            addCriterion("people_id not between", value1, value2, "peopleId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table checkout
     *
     * @mbggenerated do_not_delete_during_merge Sat Apr 28 16:08:58 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table checkout
     *
     * @mbggenerated Sat Apr 28 16:08:58 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}